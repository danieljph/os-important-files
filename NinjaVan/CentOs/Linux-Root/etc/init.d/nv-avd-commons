#!/bin/bash

# Source function library.
. /etc/init.d/nv-commons

SERVICE_LOG_FILE=$HOME/$SERVICE_NAME.log
PROGRAM_NAME="AVD $DEVICE_NAME"
PROGRAM_REGEX="[-]avd $DEVICE_NAME -skin $DEVICE_RESOLUTION"

chgrp kvm /dev/kvm
chmod 777 /dev/kvm

create-log-file

start() {
    log "===== STARTING SERVICE \"$SERVICE_NAME\" ====="
    show-info
    find-and-kill-program
    create-and-run-avd
    log ""
    log "===== END OF STARTING SERVICE \"$SERVICE_NAME\" ====="
    log ""
}

stop() {
    log "===== SHUTTING DOWN SERVICE \"$SERVICE_NAME\" ====="
    show-info
    find-and-kill-program
    log ""
    log "===== END OF SHUTTING DOWN SERVICE \"$SERVICE_NAME\" ====="
    log ""
}

restart() {
    log "RESTARTING SERVICE \"$SERVICE_NAME\" ..."
    stop
    start
}

status() {
    check-program-status
}

create-and-run-avd() {
    # rm -R $HOME/.android

    # Creating AVD
    CREATE_AVD_CMD="avdmanager create avd -d 8 -n $DEVICE_NAME -k \"$ANDROID_SYSTEM_IMAGES\" -f >> $SERVICE_LOG_FILE 2>&1"
    log "Create AVD: su - $USER -c \"$CREATE_AVD_CMD\""
    su - $USER -c "$CREATE_AVD_CMD"

    # Running emulator
    RUN_AVD_CMD="emulator -avd $DEVICE_NAME -skin $DEVICE_RESOLUTION -no-window -no-audio -gpu swiftshader >> $SERVICE_LOG_FILE 2>&1 &"
    log "Run AVD: su - $USER -c \"$RUN_AVD_CMD\""
    su - $USER -c "$RUN_AVD_CMD"

    # Check emulator
    status
}

show-info() {
    log ""
    log "SERVICE VARIABLES:"
    log "USER=$USER"
    log "HOME=$HOME"
    log "PATH=$PATH"
    log "SERVICE_NAME=$SERVICE_NAME"
    log "SERVICE_LOG_FILE=$SERVICE_LOG_FILE"
    log "DEVICE_NAME=$DEVICE_NAME"
    log "DEVICE_RESOLUTION=$DEVICE_RESOLUTION"
    log "ANDROID_SYSTEM_IMAGES=$ANDROID_SYSTEM_IMAGES"
    log ""
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	status
	;;
    restart)
	restart
        ;;
    *)
      	show-usage
        exit 1
	;;
esac
exit $?
